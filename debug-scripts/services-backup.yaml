apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2024-11-29T05:22:31Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.16.2
      helm.sh/chart: cert-manager-v1.16.2
    name: cert-manager
    namespace: cert-manager
    resourceVersion: "7335"
    uid: ea0ea58c-4079-442e-80e3-5aa96314c649
  spec:
    clusterIP: 192.40.117.167
    clusterIPs:
    - 192.40.117.167
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-prometheus-servicemonitor
      port: 9402
      protocol: TCP
      targetPort: 9402
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2024-11-29T05:22:31Z"
    labels:
      app: cainjector
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/version: v1.16.2
      helm.sh/chart: cert-manager-v1.16.2
    name: cert-manager-cainjector
    namespace: cert-manager
    resourceVersion: "7334"
    uid: 13a1c4f6-d38a-4230-aee5-489dbccb5883
  spec:
    clusterIP: 192.40.105.31
    clusterIPs:
    - 192.40.105.31
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 9402
      protocol: TCP
      targetPort: 9402
    selector:
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cainjector
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2024-11-29T05:22:31Z"
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.16.2
      helm.sh/chart: cert-manager-v1.16.2
    name: cert-manager-webhook
    namespace: cert-manager
    resourceVersion: "7330"
    uid: 436cb087-0eaf-4f03-80b6-a0ab8ad762e1
  spec:
    clusterIP: 192.40.102.205
    clusterIPs:
    - 192.40.102.205
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    - name: metrics
      port: 9402
      protocol: TCP
      targetPort: http-metrics
    selector:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: webhook
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-11-29T05:15:08Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "196"
    uid: a9e441ac-65e7-44cc-bbe7-db869a46f776
  spec:
    clusterIP: 192.40.64.1
    clusterIPs:
    - 192.40.64.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: external-secrets
      meta.helm.sh/release-namespace: external-secrets
    creationTimestamp: "2025-02-03T17:27:02Z"
    labels:
      app.kubernetes.io/instance: external-secrets
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: external-secrets-webhook
      app.kubernetes.io/version: v0.13.0
      external-secrets.io/component: webhook
      helm.sh/chart: external-secrets-0.13.0
    name: external-secrets-webhook
    namespace: external-secrets
    resourceVersion: "84908221"
    uid: f7853a06-0c84-4598-92dd-ed42c175e4cc
  spec:
    clusterIP: 192.40.86.113
    clusterIPs:
    - 192.40.86.113
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: webhook
      port: 443
      protocol: TCP
      targetPort: 10250
    selector:
      app.kubernetes.io/instance: external-secrets
      app.kubernetes.io/name: external-secrets-webhook
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2024-11-29T10:21:54Z"
    labels:
      app.kubernetes.io/component: notification-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.4.0
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: notification-controller
    namespace: flux-system
    resourceVersion: "5042365"
    uid: 9705ce2d-48be-4929-829f-b01c8b63d8f7
  spec:
    clusterIP: 192.40.77.248
    clusterIPs:
    - 192.40.77.248
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app: notification-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2024-11-29T10:21:55Z"
    labels:
      app.kubernetes.io/component: source-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.4.0
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: source-controller
    namespace: flux-system
    resourceVersion: "5042366"
    uid: 48424d5d-94c7-416a-a70b-85aa47734000
  spec:
    clusterIP: 192.40.91.229
    clusterIPs:
    - 192.40.91.229
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app: source-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2024-11-29T10:21:55Z"
    labels:
      app.kubernetes.io/component: notification-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.4.0
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: webhook-receiver
    namespace: flux-system
    resourceVersion: "5042367"
    uid: 275fd63c-8f45-4bd5-b13e-ef28d2509725
  spec:
    clusterIP: 192.40.83.35
    clusterIPs:
    - 192.40.83.35
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http-webhook
    selector:
      app: notification-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: ww-gitops
      meta.helm.sh/release-namespace: flux-system
    creationTimestamp: "2024-12-10T10:12:19Z"
    labels:
      app.kubernetes.io/instance: ww-gitops
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: weave-gitops
      app.kubernetes.io/version: v0.38.0
      helm.sh/chart: weave-gitops-4.0.36
      helm.toolkit.fluxcd.io/name: ww-gitops
      helm.toolkit.fluxcd.io/namespace: flux-system
    name: ww-gitops-weave-gitops
    namespace: flux-system
    resourceVersion: "78979421"
    uid: edd354cc-468d-48b3-a038-a02e3fd71e17
  spec:
    clusterIP: 192.40.94.33
    clusterIPs:
    - 192.40.94.33
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9001
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: ww-gitops
      app.kubernetes.io/name: weave-gitops
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.13.1-gke.0
      components.gke.io/layer: addon
    creationTimestamp: "2024-11-29T05:16:05Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: alertmanager
    namespace: gmp-system
    resourceVersion: "847"
    uid: 40c63704-55eb-4ca7-ae13-31702de9f1e7
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: alertmanager
      port: 9093
      protocol: TCP
      targetPort: 9093
    selector:
      app: managed-prometheus-alertmanager
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.13.1-gke.0
      components.gke.io/layer: addon
    creationTimestamp: "2024-11-29T05:16:06Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: gmp-operator
    namespace: gmp-system
    resourceVersion: "851"
    uid: 378829b5-ee9b-4658-876e-5a920fee5240
  spec:
    clusterIP: 192.40.89.24
    clusterIPs:
    - 192.40.89.24
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: legacy
      port: 8443
      protocol: TCP
      targetPort: webhook
    - name: webhook
      port: 443
      protocol: TCP
      targetPort: web
    selector:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx","app.kubernetes.io/part-of":"ingress-nginx","app.kubernetes.io/version":"1.12.0-beta.0"},"name":"ingress-nginx-controller","namespace":"ingress-nginx"},"spec":{"externalTrafficPolicy":"Local","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"appProtocol":"http","name":"http","port":80,"protocol":"TCP","targetPort":"http"},{"appProtocol":"https","name":"https","port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"type":"LoadBalancer"}}
    creationTimestamp: "2024-11-29T05:22:22Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.0-beta.0
    name: ingress-nginx-controller
    namespace: ingress-nginx
    resourceVersion: "7779"
    uid: 2d1c7584-2479-4e2f-9ba4-1a6f0ff35176
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 192.40.92.108
    clusterIPs:
    - 192.40.92.108
    externalTrafficPolicy: Local
    healthCheckNodePort: 30313
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: http
      name: http
      nodePort: 30933
      port: 80
      protocol: TCP
      targetPort: http
    - appProtocol: https
      name: https
      nodePort: 31051
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 34.170.57.14
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx","app.kubernetes.io/part-of":"ingress-nginx","app.kubernetes.io/version":"1.12.0-beta.0"},"name":"ingress-nginx-controller-admission","namespace":"ingress-nginx"},"spec":{"ports":[{"appProtocol":"https","name":"https-webhook","port":443,"targetPort":"webhook"}],"selector":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"type":"ClusterIP"}}
    creationTimestamp: "2024-11-29T05:22:22Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.12.0-beta.0
    name: ingress-nginx-controller-admission
    namespace: ingress-nginx
    resourceVersion: "7095"
    uid: 63aac973-e178-4fe1-95fc-6e4c16c94852
  spec:
    clusterIP: 192.40.121.246
    clusterIPs:
    - 192.40.121.246
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: https
      name: https-webhook
      port: 443
      protocol: TCP
      targetPort: webhook
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: l7-lb-controller-combined
      components.gke.io/component-version: 1.30.8-gke.0
      components.gke.io/layer: addon
    creationTimestamp: "2024-11-29T05:16:00Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBCDefaultBackend
    name: default-http-backend
    namespace: kube-system
    resourceVersion: "103950609"
    uid: ebf05b54-d092-42ba-9871-1ac413c2b183
  spec:
    clusterIP: 192.40.76.223
    clusterIPs:
    - 192.40.76.223
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 32587
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      k8s-app: glbc
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-11-29T05:15:29Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: KubeDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "285"
    uid: 22cfaf4a-d42c-44b8-a621-2b77d2f90f64
  spec:
    clusterIP: 192.40.64.10
    clusterIPs:
    - 192.40.64.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: metrics-server
      components.gke.io/component-version: 1.30.3-gke.13
      components.gke.io/layer: addon
    creationTimestamp: "2024-11-29T05:16:10Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "103950853"
    uid: 111aee2b-045e-4b4c-a105-8fa976d83d05
  spec:
    clusterIP: 192.40.94.240
    clusterIPs:
    - 192.40.94.240
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"debug-pod-sql-service","namespace":"odi-dev"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":8080}],"selector":{"app":"my-app"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-11T05:39:54Z"
    name: debug-pod-sql-service
    namespace: odi-dev
    resourceVersion: "131033193"
    uid: 293660d6-529b-49a0-b23a-81e9e981771e
  spec:
    clusterIP: 192.40.110.184
    clusterIPs:
    - 192.40.110.184
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: my-app
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app: odi
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2025-03-11T13:51:48Z"
    labels:
      app: odi
      component: dev-odi-wallet-client
      kustomize.toolkit.fluxcd.io/name: odi-flux-kustomize-deploy-dev
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: dev-odi-wallet-client-service-cluster-ip
    namespace: odi-dev
    resourceVersion: "131458732"
    uid: f64cd8f5-2cfe-4d2b-8834-d2137fc81b5c
  spec:
    clusterIP: 192.40.71.26
    clusterIPs:
    - 192.40.71.26
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    - name: metrics
      port: 8090
      protocol: TCP
      targetPort: metrics
    - name: debug
      port: 4001
      protocol: TCP
      targetPort: debug
    selector:
      app: odi
      component: dev-odi-wallet-client
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app: odi
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2025-03-11T13:51:48Z"
    labels:
      app: odi
      component: dev-odi-wallet
      kustomize.toolkit.fluxcd.io/name: odi-flux-kustomize-deploy-dev
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: dev-odi-wallet-service-cluster-ip
    namespace: odi-dev
    resourceVersion: "131458737"
    uid: d61db2c3-8c13-4700-a6e1-bbee391f67b2
  spec:
    clusterIP: 192.40.81.7
    clusterIPs:
    - 192.40.81.7
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    - name: metrics
      port: 8090
      protocol: TCP
      targetPort: metrics
    - name: debug
      port: 4001
      protocol: TCP
      targetPort: debug
    selector:
      app: odi
      component: dev-odi-wallet
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: odi-dev-redis
      meta.helm.sh/release-namespace: odi-dev
    creationTimestamp: "2025-03-05T21:50:58Z"
    labels:
      app.kubernetes.io/instance: odi-dev-redis
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      app.kubernetes.io/version: 7.4.2
      helm.sh/chart: redis-20.11.2
    name: odi-dev-redis-headless
    namespace: odi-dev
    resourceVersion: "124410087"
    uid: ba0103ab-9084-4170-b737-d1220df167c6
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: redis
    selector:
      app.kubernetes.io/instance: odi-dev-redis
      app.kubernetes.io/name: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: odi-dev-redis
      meta.helm.sh/release-namespace: odi-dev
    creationTimestamp: "2025-03-05T21:50:58Z"
    labels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: odi-dev-redis
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      app.kubernetes.io/version: 7.4.2
      helm.sh/chart: redis-20.11.2
    name: odi-dev-redis-master
    namespace: odi-dev
    resourceVersion: "124410090"
    uid: 0d100c26-ca7a-4732-8516-49d98ade8032
  spec:
    clusterIP: 192.40.112.200
    clusterIPs:
    - 192.40.112.200
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: redis
    selector:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: odi-dev-redis
      app.kubernetes.io/name: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: odi-dev-redis
      meta.helm.sh/release-namespace: odi-dev
    creationTimestamp: "2025-03-05T21:50:58Z"
    labels:
      app.kubernetes.io/component: replica
      app.kubernetes.io/instance: odi-dev-redis
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: redis
      app.kubernetes.io/version: 7.4.2
      helm.sh/chart: redis-20.11.2
    name: odi-dev-redis-replicas
    namespace: odi-dev
    resourceVersion: "124410092"
    uid: c4251def-a6dc-4228-bf18-782b14b5472f
  spec:
    clusterIP: 192.40.111.209
    clusterIPs:
    - 192.40.111.209
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: redis
    selector:
      app.kubernetes.io/component: replica
      app.kubernetes.io/instance: odi-dev-redis
      app.kubernetes.io/name: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"service-mysql-debug","namespace":"odi-dev"},"spec":{"ports":[{"name":"mysql","port":3306,"protocol":"TCP","targetPort":3306}],"selector":{"app":"mysql-debug"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-11T05:44:13Z"
    name: service-mysql-debug
    namespace: odi-dev
    resourceVersion: "131036969"
    uid: 8007c601-bd78-4830-a8a1-075f36eae772
  spec:
    clusterIP: 192.40.119.19
    clusterIPs:
    - 192.40.119.19
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      app: mysql-debug
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
